import requests
import json
import random
import logging
import time
import os


class VTReportDownloader(object):

    def __init__(self, _url_list=[]):
        self.url_list = _url_list
        # self.TorInit = TorInit(socks_port=9050)
        # self.TorInit._startTorProxy(kill=kill)
        self.user_agent = ''
        self.proxies = {
            # 'http': 'socks5h://127.0.0.1:9050',
            'https': 'socks5h://127.0.0.1:9050'
        }

    def _sys_sleep(self):
        u = random.uniform(0, 0.25)
        logging.info('system sleeps {} seconds...'.format(u))
        time.sleep(u)

    def get_page_source(self, url):
        if url is None:
            return None
        s = requests.Session()
        s.proxies = self.proxies
        headers = {
            'User-Agent': self.user_agent,
        }
        # Make the HTTP request through the session.
        r = s.get(url, headers=headers)
        # Check if the proxy was indeed used (the text should contain the proxy IP).
        if r.status_code == 200:
            r.encoding = 'utf-8'
            html_contnet = r.text
            logging.info('Report downloaded.')
            return html_contnet
        return None


if __name__ == '__main__':

    pass
