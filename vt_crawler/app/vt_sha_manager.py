from pathlib import Path
import os
import configparser
import pickle
import sys
parpath = os.path.abspath(os.path.join(os.path.dirname(__file__), os.path.pardir))
config = configparser.ConfigParser()
config.read(parpath + "/config.ini")
TXT_PATH = config.get("filepath", "txt_path")
PKL_PATH = config.get("filepath", "pkl_path")
MALWARE_PATH = config.get("filepath", "malware_path")


class ShaManager(object):

    def __init__(self, sha_filename=None):
        self.sha_filename = sha_filename
        self.old_shas = set()
        self.new_shas = set()
        self.new_txts = set()
        self.update_shas()

    def get_folder_shas(self, folder, extention):
        folder_shas = [path.name for path in Path(folder).rglob('*.{}'.format(extention))]
        if folder_shas:
            folder_shas = [p.replace('.{}'.format(extention), '') for p in folder_shas]
        return folder_shas

    def get_sha_pkl(self):
        sha_set = pickle.load(open(parpath + self.sha_filename, 'rb'))
        return sha_set

    def get_dangernames(self):
        sha_names_list = []
        for file in self.filename_list:
            f = open(DANGERFNAME_PATH + file, "r")
            content = f.readlines()
            sha_names_list.extend([d.strip('.danger\n') for d in content])
        return sha_names_list

    def update_shas(self):
        danger_set = set(self.get_folder_shas(MALWARE_PATH, 'danger'))
        pkl_set = set(self.get_folder_shas(PKL_PATH, 'pkl'))
        self.old_shas = set(self.get_folder_shas(TXT_PATH, 'txt'))
        self.new_txts = self.old_shas - pkl_set

        if self.sha_filename is None:
            self.new_shas = danger_set - self.old_shas
        else:
            sha_set = self.get_sha_pkl()
            self.new_shas = sha_set - self.old_shas

    def _new_shas_size(self):
        return len(self.new_shas)

    def _old_shas_size(self):
        return len(self.old_shas)


def get_unique_sample_sha(path, filenames):
    unique_pkl = []
    text_md5_set = set()
    for pkl in filenames:
        f = '{}.pkl'.format(pkl)
        dic = pickle.load(open(path + f, 'rb'))
        try:
            text_md5 = dic['sections'][0]['md5']
            if text_md5 not in text_md5_set:
                unique_pkl.append(pkl)
                text_md5_set.add(text_md5)
        except Exception as e:
            error = (str('--Error on line {}'.format(sys.exc_info()[-1].tb_lineno) + str(e)))
            print("{}".format(error))
    return unique_pkl


if __name__ == '__main__':
    # toj = ShaManager()
    # print(toj.new_shas)
    # print(len(toj.new_shas))

    # toj = ShaManager(sha_filename='/crawled_hash_set_0306.pkl')
    # print(toj.new_shas)
    # print(len(toj.new_shas))

    path = '/Users/bensonbair/Documents/projects/III/virustotal_crawler/pkl_output_all/'
    filenames = ShaManager().get_folder_shas(path, 'pkl')
    unique_pkl = get_unique_sample_sha(path, filenames)
    print(unique_pkl)
    pickle.dump(unique_pkl, open('unique_sha256.pkl', 'wb'))
